{"version":3,"sources":["logo.svg","components/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","props","state","currencyA_value","currencyB_value","converter","bind","from_to","this","currencyA","currencyB","url","console","log","fetch","then","res","json","exchange","parseFloat","toFixed","setState","Card","className","CardActionArea","CardContent","TextField","id","label","variant","InputProps","type","onChange","event","target","value","Button","color","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,oGCQMA,E,kDACpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZC,gBAAiB,GACjBC,gBAAiB,GAElB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPC,E,6CAUnB,WAAa,IAAD,OACPC,EAAO,UAAMC,KAAKP,MAAMQ,UAAjB,YAA8BD,KAAKP,MAAMS,WAEhDC,EAAG,qDAAiDJ,EAAjD,8CAEPK,QAAQC,IAAI,MAAOF,GACnBG,MAAMH,GACJI,MAAK,SAACC,GACN,OAAOA,EAAIC,UAEXF,MAAK,SAACE,GACN,IAAIC,EAAWD,EAAKV,GAChBH,GACHe,WAAW,EAAKjB,MAAMC,iBAAmBe,GACxCE,QAAQ,GACV,EAAKC,SAAS,CAAEjB,yB,oBAInB,WAAU,IAAD,OACR,OACC,8BACC,cAACkB,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACC,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAaF,UAAU,YAAvB,UACC,+BACEf,KAAKP,MAAMQ,UADb,OAC4BD,KAAKP,MAAMS,aACjC,IACN,cAACgB,EAAA,EAAD,CACCC,GAAG,iBACHC,MAAM,yBACNC,QAAQ,WACRC,WAAY,GACZC,KAAK,OACLC,SAAU,SAACC,GACV,EAAKZ,SAAS,CAAElB,gBAAiB8B,EAAMC,OAAOC,WAGhD,cAACC,EAAA,EAAD,CACCL,KAAK,SACLF,QAAQ,YACRQ,MAAM,YACNC,QAAS9B,KAAKH,UAJf,qBAQA,qCAAQG,KAAKN,MAAME,gC,GAzDamC,aCexBC,MApBf,WACC,OACC,sBAAKjB,UAAU,MAAf,UACC,oDACA,sBAAKA,UAAU,OAAf,UACC,cAAC,EAAD,CAAWd,UAAU,MAAMC,UAAU,QACrC,cAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,WAEtC,sBAAKa,UAAU,OAAf,UACC,cAAC,EAAD,CAAWd,UAAU,MAAMC,UAAU,QACrC,cAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,WAEtC,sBAAKa,UAAU,OAAf,UACC,cAAC,EAAD,CAAWd,UAAU,MAAMC,UAAU,QACrC,cAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,eCL1B+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.23de0385.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport \"./Converter.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default class Converter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcurrencyA_value: \"\",\n\t\t\tcurrencyB_value: 0,\n\t\t};\n\t\tthis.converter = this.converter.bind(this);\n\t}\n\n\tconverter() {\n\t\tlet from_to = `${this.props.currencyA}_${this.props.currencyB}`;\n\n\t\tlet url = `https://free.currconv.com/api/v7/convert?q=${from_to}&compact=ultra&apiKey=ff5d681bac26408e25b3`;\n\n\t\tconsole.log(\"url\", url);\n\t\tfetch(url)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((json) => {\n\t\t\t\tlet exchange = json[from_to];\n\t\t\t\tlet currencyB_value = (\n\t\t\t\t\tparseFloat(this.state.currencyA_value) * exchange\n\t\t\t\t).toFixed(2);\n\t\t\t\tthis.setState({ currencyB_value });\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card className=\"root\">\n\t\t\t\t\t<CardActionArea>\n\t\t\t\t\t\t<CardContent className=\"converter\">\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{this.props.currencyA} to {this.props.currencyB}\n\t\t\t\t\t\t\t</h2>{\" \"}\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\t\tlabel=\"Enter value to convert\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tInputProps={{}}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tthis.setState({ currencyA_value: event.target.value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tonClick={this.converter}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tConvert\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<h2>R$ {this.state.currencyB_value}</h2>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Converter from \"./components/Converter\";\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Currency Converter</h1>\n\t\t\t<div className=\"line\">\n\t\t\t\t<Converter currencyA=\"USD\" currencyB=\"BRL\"></Converter>\n\t\t\t\t<Converter currencyA=\"BRL\" currencyB=\"USD\"></Converter>\n\t\t\t</div>\n\t\t\t<div className=\"line\">\n\t\t\t\t<Converter currencyA=\"CAD\" currencyB=\"BRL\"></Converter>\n\t\t\t\t<Converter currencyA=\"BRL\" currencyB=\"CAD\"></Converter>\n\t\t\t</div>\n\t\t\t<div className=\"line\">\n\t\t\t\t<Converter currencyA=\"EUR\" currencyB=\"BRL\"></Converter>\n\t\t\t\t<Converter currencyA=\"BRL\" currencyB=\"EUR\"></Converter>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}